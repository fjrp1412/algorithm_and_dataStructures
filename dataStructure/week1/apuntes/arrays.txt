Un array se entiende como un vector, este por lo general suele ser uni dimensional o bi dimensional, sin embargo, puede tener N cantidad de dimensione

Una particularidad de los array es que el tamaño o cantidad de indices de estos son inmutables y el tamaño de almacenamiento por cada indice o espacio es el mismo

Otra particularidad de los arrays es que tenemos acceso de tiempo constante, es decir, acceder a un elemento de un array conociendo el indice SIEMPRE será constante, es decir, en Big O notation, seria un O(1). Esto puede ser particularmente eficiente al momento de implementar distintos algoritmos. Cabe aclarar que es tiempo constante para la lectura y la escritura

Otro factor importante de los arrays es que, el tamaño de un Array permanece estatico y fijo, este no cambia, por lo tanto hacer buen uso de los tipos de datos numericos (byte,int, long, long long, etc) puede hacer una diferencia abismal en el performance de la memoria

La manera en la que funciona detrás (esto lo hará el compilador o interprete por nosotros)

array_addr + elemen_size * (i - first_index)

Las operaciones en las matrices u arrays serian asi:


							Add		Remove

Beginning			O(N)	O(n)
End						O(1)	O(1)
Midd					O(n)	O(n)

Es decir, para operaciones de elementos sobre el ultimo indice, son increiblemente rapidos teniendo tiempo constante. Sin embargo, si se va a añadir o remover un elemento de en medio o del principio, son menos eficientes, siendo tiempos lineales

Basicamente quedaría que:

Lectura y escritura: O(1) en todos los casos

Añadir y remover: Ultimo indice O(1), cualquier otro indice O(n). Esto debido a que si se modifica en medio o el primero, se tienen que re acomodar y re posicionar los demás indices




